//creating a new linked list by copying the elements from an existing linked list. 

#include<stdio.h>
#include<stdlib.h>

struct Node{
	int data;
	struct Node * next;
};

struct Node * create(struct Node * head , int val){
    //struct Node * head = (struct Node*)malloc(sizeof(struct Node));

    if(head == NULL){
        printf("Memory allocation failed");
        exit(1);  // Exit the program if memory allocation fails
    }
    
    head->data = val;
    head->next = NULL;
    printf("First Node is created -> %d\n,",val);
    return head;
}
struct Node * add(struct Node * head, int val){
	struct Node * p = (struct Node *)malloc(sizeof(struct Node));
	struct Node * temp = head;
	p -> data = val;
	p -> next = NULL;
	while(temp -> next != NULL){
		temp = temp -> next;
	}
	temp -> next = p;
	printf("New Node -> %d added\n",val);
	
	return head;
}

void display(struct Node * head){
	struct Node * ptr = head;
	while(ptr != NULL){
		printf("%d ",ptr -> data);
		ptr = ptr -> next;
	}
}

struct Node * copied(struct Node * head){
	struct Node * temp = head;
	struct Node * tail = NULL;
	struct Node * newList = NULL;
	while(temp != NULL){
		struct Node * newNode = (struct Node * )malloc(sizeof(struct Node));
		newNode -> data = temp -> data;
		newNode -> next = NULL;
		if(newList == NULL){
			newList = newNode;
			tail = newNode;
		}
		else{
			tail -> next = newNode;
			tail = newNode;
		}
		temp = temp -> next;
	}
	return newList;
}
int main(){
	struct Node * head = (struct Node * )malloc(sizeof(struct Node));
	
	head = create(head,3);
	add(head,2);
	add(head,7);
	add(head,4);
	printf("\n");
	display(head);
	printf("\nSum is : %d ",sum_of_list(head));
	printf("\n");
	struct Node * copy = (struct Node *)malloc(sizeof(struct Node));
	copy = copied(head);
	display(copy);
}
